# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache
 Adidas in Southeast Asia (April–May 2025): A
Comprehensive Competitor Analysis
Executive Summary
This competitor analysis report provides an in-depth comparative examination of Nike and Adidas in Southeast Asia
(SEA) for the period of April to May 2025. Building on both primary and secondary data sources—from industry
news, financial statements, regional press releases, consumer testimony, and marketplace analyses—the report
focuses on four main areas:
Promotional Campaigns: At least four major campaigns per brand are dissected, detailing objectives,
mechanics, budgets, creative strategies, and performance indicators.
Price Comparisons by Campaign: Pricing details, discount strategies, and promotional models are
presented in Markdown tables for clarity and reference.
Traffic & Revenue Analysis: A region-specific exploration of web traffic, e-commerce penetration, revenue
estimates, and return on investment (ROI). Campaign-by-campaign breakdowns underscore implications for
overall market share.
Customer Feedback: Representative quotes, user testimonies, and sentiment analysis highlight on-the-
ground reactions to the respective campaigns.
1. 
2. 
3. 
4. 


# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#  According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#  However, in case of collaboration, if having platform-specific dependencies or dependencies
#  having no cross-platform support, pipfile.lock can be ignored.
# Pipfile.lock

# poetry
#  Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
# poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyderworkspace

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

tests/